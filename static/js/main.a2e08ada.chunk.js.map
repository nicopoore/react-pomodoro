{"version":3,"sources":["components/TimeDisplay.js","components/Timer.js","components/TimerButtons.js","components/IncDec.js","App.js","reportWebVitals.js","index.js"],"names":["TimeDisplay","formatTime","time","format","t","Math","floor","toString","padStart","mm","ss","this","props","Component","Timer","updateTimer","newType","currentType","running","currentTimer","newTimer","dispatch","type","breakLength","sessionLength","playAudio","sound","document","getElementById","currentTime","play","progressCircle","currentMaxValue","setInterval","id","className","CircularProgress","variant","thickness","size","value","src","preload","connect","state","library","add","faPause","faPlay","faSync","faArrowUp","TimerButtons","changeStatus","resetTimer","pause","currentStatus","icon","onClick","IncDec","handleClick","actionType","actionReceiver","updateLength","newLength","nonActionReceiver","nonActionLength","newCurrentTimer","concat","formatString","str","replace","faArrowDown","UPDATE_TIMER","CHANGE_STATUS","CHANGE_TYPE","UPDATE_LENGTH","RESET_TIMER","defaultState","store","createStore","action","App","class","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2e08ada.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class TimeDisplay extends Component {\r\n  \r\n  formatTime = (time) => {\r\n    const format = t => Math.floor(t).toString().padStart(2, \"0\")\r\n    let mm = format(time / 60000)\r\n    let ss = format(time % 60000 / 1000)\r\n    return `${mm}:${ss}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.formatTime(this.props.time)}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TimeDisplay from './TimeDisplay'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n\r\nclass Timer extends Component {\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      this.updateTimer()\r\n    }, 10);\r\n  }\r\n\r\n  updateTimer = () => {\r\n    let newType = this.props.currentType === 'session' ? 'break' : 'session' \r\n    if (this.props.running && this.props.currentTimer > 0) {\r\n      let newTimer = this.props.currentTimer - 10\r\n      this.props.dispatch({\r\n        type: 'UPDATE_TIMER',\r\n        currentTimer: newTimer\r\n      })\r\n    } else if (this.props.running && this.props.currentTimer === 0) {\r\n      this.props.dispatch({\r\n        type: 'CHANGE_TYPE',\r\n        currentType: newType,\r\n        currentTimer: this.props.currentType === 'session' ? this.props.breakLength : this.props.sessionLength\r\n      })\r\n      this.playAudio()\r\n    }\r\n  }\r\n\r\n  playAudio = () => {\r\n    const sound = document.getElementById(\"beep\")\r\n    sound.currentTime = 0\r\n    sound.play()\r\n  }\r\n\r\n  progressCircle = () => {\r\n    let currentMaxValue = this.props.currentType === 'session' ? this.props.sessionLength : this.props.breakLength\r\n    return (this.props.currentTimer / currentMaxValue) * 100\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"Timer\">\r\n        <h2 className=\"capitalize\" id=\"timer-label\">{this.props.currentType}</h2>\r\n        <div id=\"progress-radius\">\r\n          <CircularProgress key={this.props.currentTimer / 60000} className=\"circularProgress\" variant=\"determinate\" thickness={2} size={\"7.9rem\"} value={this.progressCircle()} />\r\n          <h1 id=\"time-left\">\r\n            <TimeDisplay \r\n              time={this.props.currentTimer}\r\n            />\r\n          </h1>\r\n        </div>\r\n        <audio \r\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n          preload=\"auto\"\r\n          id=\"beep\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentType: state.currentType,\r\n  currentTimer: state.currentTimer,\r\n  running: state.running,\r\n  sessionLength: state.sessionLength,\r\n  breakLength: state.breakLength\r\n})\r\n\r\nexport default connect(mapStateToProps)(Timer)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPause, faPlay, faSync, faArrowUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\nlibrary.add(faPause, faPlay, faSync, faArrowUp)\r\n\r\nclass TimerButtons extends Component {\r\n\r\n  changeStatus = () => {\r\n    this.props.dispatch({\r\n      type: 'CHANGE_STATUS',\r\n      running: !this.props.running\r\n    })\r\n  }\r\n\r\n  resetTimer = () => {\r\n    const sound = document.getElementById(\"beep\")\r\n    sound.pause()\r\n    sound.currentTime = 0\r\n    this.props.dispatch({\r\n      type: 'RESET_TIMER'\r\n    })\r\n  }\r\n\r\n  //const pause = () => <FontAwesomeIcon\r\n\r\n  currentStatus = () => this.props.running ? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"TimerButtons\">\r\n        <button className=\"btn-one timer-btn\" id=\"start_stop\" onClick={this.changeStatus}>{this.currentStatus()}</button>\r\n        <button className=\"btn-one timer-btn\" id=\"reset\" onClick={this.resetTimer}><FontAwesomeIcon icon={faSync} /></button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  running: state.running\r\n})\r\n\r\nexport default connect(mapStateToProps)(TimerButtons)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass IncDec extends Component {\r\n\r\n  handleClick = (actionType, actionReceiver) => {\r\n    if (!(\r\n      (this.props[actionReceiver] <= 60000 && actionType === 'dec') || \r\n      (this.props[actionReceiver] >= 3600000 && actionType === 'inc'))\r\n    ) {\r\n      if (!this.props.running) {\r\n        this.updateLength(actionType, actionReceiver)\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLength = (actionType, actionReceiver) => {\r\n    let newLength, nonActionReceiver, nonActionLength\r\n\r\n    if (actionReceiver === 'sessionLength') {\r\n      newLength = this.props.sessionLength\r\n      nonActionReceiver = 'breakLength'\r\n      nonActionLength = this.props.breakLength\r\n    } else {\r\n      newLength = this.props.breakLength\r\n      nonActionReceiver = 'sessionLength'\r\n      nonActionLength = this.props.sessionLength\r\n    }\r\n\r\n    newLength = actionType === 'inc' ? newLength + 60000 : newLength - 60000\r\n    let newCurrentTimer = this.props.currentType.concat('Length') === actionReceiver ? newLength : this.props.currentTimer\r\n\r\n    this.props.dispatch({\r\n      type: 'UPDATE_LENGTH',\r\n      [actionReceiver]: newLength,\r\n      [nonActionReceiver]: nonActionLength,\r\n      currentTimer: newCurrentTimer\r\n    })\r\n  }\r\n\r\n  formatString = str => this.props.type.replace('Length', str)\r\n\r\n  render() {\r\n    return (\r\n      <div id={this.formatString('-length-div')}>\r\n        <h3 \r\n          className=\"capitalize\" \r\n          id={this.formatString('-label')}\r\n        >\r\n          {this.formatString(' Length')}\r\n        </h3>\r\n\r\n        <button\r\n          className=\"btn-one\" \r\n          id={this.formatString('-decrement')} \r\n          onClick={() => this.handleClick('dec', this.props.type)}\r\n        >\r\n          <FontAwesomeIcon icon={faArrowDown} />\r\n        </button>\r\n\r\n        <p id={this.formatString('-length')}>\r\n          {this.props.type === 'sessionLength' ? this.props.sessionLength / 60000 : this.props.breakLength / 60000 }\r\n        </p>\r\n        \r\n        <button\r\n          className=\"btn-one\" \r\n          id={this.formatString('-increment')} \r\n          onClick={() => this.handleClick('inc', this.props.type)}\r\n        >\r\n          <FontAwesomeIcon icon={faArrowUp} />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  running: state.running,\r\n  sessionLength: state.sessionLength,\r\n  breakLength: state.breakLength,\r\n  currentType: state.currentType,\r\n  currentTimer: state.currentTimer\r\n})\r\n\r\nexport default connect(mapStateToProps)(IncDec)","import './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { Timer, TimerButtons, IncDec } from './components'\n\nconst UPDATE_TIMER = 'UPDATE_TIMER'\nconst CHANGE_STATUS = 'CHANGE_STATUS'\nconst CHANGE_TYPE = 'CHANGE_TYPE'\nconst UPDATE_LENGTH = 'UPDATE_LENGTH'\nconst RESET_TIMER = 'RESET_TIMER'\n\nconst defaultState = {\n  running: false,\n  currentType: \"session\",\n  currentTimer: 1500000,\n  sessionLength: 1500000,\n  breakLength: 300000,\n}\n\nconst rootReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case UPDATE_TIMER:\n      return {\n        ...state,\n        currentTimer: action.currentTimer\n      }\n    case CHANGE_STATUS:\n      return {\n        ...state,\n        running: action.running\n      }\n    case CHANGE_TYPE:\n      return {\n        ...state,\n        currentType: action.currentType,\n        currentTimer: action.currentTimer\n      }\n    case UPDATE_LENGTH:\n      return {\n        ...state,\n        currentTimer: action.currentTimer,\n        sessionLength: action.sessionLength,\n        breakLength: action.breakLength\n      }\n    case RESET_TIMER:\n      return {\n        ...defaultState\n      }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(rootReducer)\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Timer />\n\n        <TimerButtons />\n\n        <div id=\"lengths\">\n          <IncDec\n            type=\"sessionLength\"\n          />\n          \n          <IncDec\n            type=\"breakLength\"\n          />\n        </div>\n\n        <p id=\"author\">\n          Created by&nbsp;\n          <a class=\"linkedin\" href=\"https://www.linkedin.com/in/nicolas-poore/\">\n            Nicolás Poore\n          </a>\n        </p>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}